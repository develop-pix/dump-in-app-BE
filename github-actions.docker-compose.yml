version: "3.9"

volumes:
  postgres: {}

services:
  redis:
    container_name: redis
    image: redis:7.2.2
    ports:
      - "6379:6379"
    restart: on-failure

  postgres:
    container_name: postgres
    image: postgis/postgis:16-3.4
    volumes:
      - postgres:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=github_actions
    restart: on-failure

  django:
    container_name: django
    build:
      context: .
      dockerfile: docker/dev.Dockerfile
    environment:
      - GITHUB_WORKFLOW=True
    command: poetry run python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      - redis
      - postgres
    restart: on-failure

  celery:
    build:
      context: .
      dockerfile: docker/dev.Dockerfile
    command: poetry run celery -A dump_in.tasks worker -l info --without-gossip --without-mingle --without-heartbeat
    environment:
      - GITHUB_WORKFLOW=True
      - CELERY_BROKER_URL=redis://redis:6379/0
    volumes:
      - .:/app
    depends_on:
      - redis
      - postgres
    restart: on-failure

  beats:
    build:
      context: .
      dockerfile: docker/dev.Dockerfile
    command: poetry run celery -A dump_in.tasks beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    environment:
      - GITHUB_WORKFLOW=True
      - CELERY_BROKER_URL=redis://redis:6379/0
    volumes:
      - .:/app
    depends_on:
      - redis
      - postgres
    restart: on-failure
