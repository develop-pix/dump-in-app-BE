# Generated by Django 4.2.7 on 2023-12-14 04:03

from django.conf import settings
import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Hashtag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('description', models.CharField(max_length=128, null=True)),
            ],
            options={
                'verbose_name': 'hashtag',
                'verbose_name_plural': 'hashtags',
                'db_table': 'hashtag',
            },
        ),
        migrations.CreateModel(
            name='PhotoBooth',
            fields=[
                ('id', models.UUIDField(editable=False, primary_key=True, serialize=False)),
                ('location', models.CharField(max_length=32)),
                ('name', models.CharField(max_length=64)),
                ('latitude', models.DecimalField(decimal_places=10, max_digits=13)),
                ('longitude', models.DecimalField(decimal_places=10, max_digits=13)),
                ('point', django.contrib.gis.db.models.fields.PointField(null=True, srid=4326)),
                ('street_address', models.CharField(max_length=64)),
                ('road_address', models.CharField(max_length=64)),
                ('operation_time', models.CharField(max_length=64)),
                ('like_count', models.PositiveIntegerField(default=0)),
                ('view_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'photo booth',
                'verbose_name_plural': 'photo booths',
                'db_table': 'photo_booth',
            },
        ),
        migrations.CreateModel(
            name='PhotoBoothBrand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('description', models.CharField(max_length=128, null=True)),
                ('photo_booth_url', models.URLField(max_length=128)),
                ('main_thumbnail_image_url', models.URLField(max_length=512, null=True)),
                ('logo_image_url', models.URLField(max_length=512, null=True)),
                ('is_event', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'photo booth brand',
                'verbose_name_plural': 'photo booth brands',
                'db_table': 'photo_booth_brand',
            },
        ),
        migrations.CreateModel(
            name='PhotoBoothRawData',
            fields=[
                ('id', models.UUIDField(editable=False, primary_key=True, serialize=False)),
                ('location', models.CharField(max_length=32)),
                ('name', models.CharField(max_length=64)),
                ('operation_time', models.CharField(max_length=32)),
                ('street_address', models.CharField(max_length=64)),
                ('road_address', models.CharField(max_length=64)),
                ('latitude', models.DecimalField(decimal_places=10, max_digits=13)),
                ('longitude', models.DecimalField(decimal_places=10, max_digits=13)),
                ('photo_booth_url', models.URLField(max_length=128)),
                ('main_thumbnail_image_url', models.URLField(max_length=512)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'photo booth raw data',
                'verbose_name_plural': 'photo booth raw datas',
                'db_table': 'photo_booth_raw_data',
            },
        ),
        migrations.CreateModel(
            name='UserPhotoBoothLikeLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo_booth', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='photo_booths.photobooth')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'user photo booth like log',
                'verbose_name_plural': 'user photo booth like logs',
                'db_table': 'user_photo_booth_like_log',
            },
        ),
        migrations.CreateModel(
            name='PhotoBoothBrandImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo_booth_brand_image_url', models.URLField(max_length=512)),
                ('photo_booth_brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photo_booth_brand_image', to='photo_booths.photoboothbrand')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'photo booth brand image',
                'verbose_name_plural': 'photo booth brand images',
                'db_table': 'photo_booth_brand_image',
            },
        ),
        migrations.CreateModel(
            name='PhotoBoothBrandHashtag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hashtag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photo_booth_brand_hashtags', to='photo_booths.hashtag')),
                ('photo_booth_brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photo_booth_brand_hashtags', to='photo_booths.photoboothbrand')),
            ],
            options={
                'verbose_name': 'photo booth brand hashtag',
                'verbose_name_plural': 'photo booth brand hashtags',
                'db_table': 'photo_booth_brand_hashtag',
            },
        ),
        migrations.AddField(
            model_name='photoboothbrand',
            name='hashtag',
            field=models.ManyToManyField(related_name='photo_booth_brands', through='photo_booths.PhotoBoothBrandHashtag', to='photo_booths.hashtag'),
        ),
        migrations.AddField(
            model_name='photobooth',
            name='photo_booth_brand',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='photo_booths.photoboothbrand'),
        ),
        migrations.AddField(
            model_name='photobooth',
            name='user_photo_booth_like_logs',
            field=models.ManyToManyField(related_name='photo_booth_like_logs', through='photo_booths.UserPhotoBoothLikeLog', to=settings.AUTH_USER_MODEL),
        ),
    ]
